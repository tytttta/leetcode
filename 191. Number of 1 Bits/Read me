Problem description :

Write a function that takes an unsigned integer and returns the number of ¡¯1' bits it has (also known as the Hamming weight).

For example, the 32-bit integer ¡¯11' has binary representation 00000000000000000000000000001011, so the function should return 3.


Solution:
Using the bit Manipulation to calculate the number of 1, every time n & =n-1, can clear the right 1 of the number!


tips:
Because java can not use unsigned int . so I cannot use the method of mod to get the number of 1.
